---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mini-budget-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/mini-budget

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mini-budget-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-app
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nodejs-app
  template:
    metadata:
      labels:
        app: nodejs-app
    spec:
      containers:
      - name: nodejs-app
        image: "meetpatel1111/nodejs-app:${ENVIRONMENT}"
        ports:
        - containerPort: 3000

---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: mini-budget-tracker
#  namespace: default
#spec:
#  replicas: 2
#  selector:
#    matchLabels:
#      app: mini-budget-tracker
#  template:
#    metadata:
#      labels:
#        app: mini-budget-tracker
#    spec:
#      containers:
#      - name: mini-budget-tracker
#        image: "meetpatel1111/mini-budget-tracker:${ENVIRONMENT}"
#        ports:
#        - containerPort: 3000
#        volumeMounts:
#        - name: data-volume
#          mountPath: /data
#      volumes:
#      - name: data-volume
#        persistentVolumeClaim:
#          claimName: mini-budget-data

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8sgpt
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8sgpt
  template:
    metadata:
      labels:
        app: k8sgpt
    spec:
      containers:
      - name: k8sgpt
        image: ghcr.io/k8sgpt-ai/k8sgpt:latest
        ports:
        - containerPort: 80
