---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8sgpt
  namespace: default
spec:
  replicas: 2
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: k8sgpt
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: k8sgpt
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: k8sgpt-analyzer
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      # Spread pods across nodes/zones for HA
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: k8sgpt
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: k8sgpt
      volumes:
        - name: k8sgpt-config
          emptyDir:
            sizeLimit: 64Mi
      containers:
        - name: k8sgpt
          image: ghcr.io/k8sgpt-ai/k8sgpt:latest
          imagePullPolicy: IfNotPresent
          args:
            - serve
          env:
            - name: K8SGPT_BACKEND
              value: openai
            - name: K8SGPT_MODEL
              value: gpt-4o
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: k8sgpt-secret
                  key: OPENAI_API_KEY
          ports:
            - name: http
              containerPort: 8080
            - name: metrics
              containerPort: 8081
          volumeMounts:
            - name: k8sgpt-config
              mountPath: /home/nonroot/.config
          startupProbe:
            httpGet:
              path: /metrics
              port: metrics
            failureThreshold: 30
            periodSeconds: 2
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL

---
apiVersion: v1
kind: Service
metadata:
  name: k8sgpt-service
  namespace: default
  labels:
    app: k8sgpt
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8081"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: k8sgpt
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8080
    - name: metrics
      port: 8081
      targetPort: 8081

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: k8sgpt-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: k8sgpt
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: k8sgpt-pdb
  namespace: default
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: k8sgpt